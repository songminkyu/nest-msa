// For format details, see https://aka.ms/vscode-remote/devcontainer.json or this file's README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.122.1/containers/docker-existing-dockerfile
{
    "name": "${containerWorkspaceFolderBasename}",
    "build": {
        "dockerfile": "Dockerfile",
        "context": "."
    },
    "hostRequirements": {
        "cpus": 4,
        "memory": "16gb",
        "storage": "32gb"
    },
    "mounts": [
        "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind"
    ],
    "containerEnv": {
        "WORKSPACE_ROOT": "${containerWorkspaceFolder}",
        "NETWORK_NAME": "${containerWorkspaceFolderBasename}"
    },
    "runArgs": [
        "--network",
        "${containerWorkspaceFolderBasename}",
        "--name",
        "${containerWorkspaceFolderBasename}-vscode"
    ],
    "initializeCommand": "docker network create ${containerWorkspaceFolderBasename} >/dev/null 2>&1 || true",
    "onCreateCommand": "docker tag $(docker images -q vsc-${containerWorkspaceFolderBasename}-*) vscode-${containerWorkspaceFolderBasename} && docker rmi $(docker images --filter=reference=vsc-${containerWorkspaceFolderBasename}-* --format {{.Repository}})",
    "postCreateCommand": "bash scripts/reset-infra.sh && npm ci && npx husky",
    "customizations": {
        "vscode": {
            "extensions": [
                "dbaeumer.vscode-eslint",
                "firsttris.vscode-jest-runner",
                "ms-vscode.live-server",
                "ms-azuretools.vscode-docker",
                "jebbs.plantuml",
                "esbenp.prettier-vscode",
                "mutantdino.resourcemonitor",
                "foxundermoon.shell-format",
                "github.vscode-pull-request-github"
            ],
            "settings": {
                "remote.autoForwardPorts": false,
                "remote.downloadExtensionsLocally": true,
                "prettier.enableDebugLogs": true,
                "livePreview.portNumber": 3030,
                "docker.enableDockerComposeLanguageService": false,
                "typescript.tsc.autoDetect": "off",
                "typescript.disableAutomaticTypeAcquisition": true,
                "typescript.format.enable": false,
                "javascript.format.enable": false,
                "javascript.validate.enable": false,
                "javascript.updateImportsOnFileMove.enabled": "never",
                "typescript.updateImportsOnFileMove.enabled": "never",
                "editor.defaultFormatter": "esbenp.prettier-vscode",
                "[dockerfile]": {
                    "editor.defaultFormatter": "ms-azuretools.vscode-docker"
                },
                "[json]": {
                    "editor.defaultFormatter": "vscode.json-language-features"
                },
                "[jsonc]": {
                    "editor.defaultFormatter": "vscode.json-language-features"
                },
                "[html]": {
                    "editor.defaultFormatter": "vscode.html-language-features"
                },
                "[dotenv]": {
                    "editor.defaultFormatter": "foxundermoon.shell-format"
                },
                "[shellscript]": {
                    "editor.defaultFormatter": "foxundermoon.shell-format"
                },
                "[ignore]": {
                    "editor.defaultFormatter": "foxundermoon.shell-format"
                },
                "[markdown]": {
                    "editor.defaultFormatter": "esbenp.prettier-vscode"
                },
                "plantuml.server": "https://www.plantuml.com/plantuml",
                "plantuml.render": "PlantUMLServer",
                "githubPullRequests.pullBranch": "never",
                "githubPullRequests.createOnPublishBranch": "never",
                "githubPullRequests.fileListLayout": "flat",
                "githubIssues.queries": [
                    {
                        "label": "My Issues",
                        "query": "default"
                    },
                    {
                        "label": "Created Issues",
                        "query": "author:${user} state:open repo:${owner}/${repository} sort:created-desc"
                    },
                    {
                        "label": "All Issues",
                        "query": "repo:${owner}/${repository} sort:updated-desc"
                    }
                ]
            }
        }
    }
}
