# https://docs.github.com/en/actions/learn-github-actions/contexts#github-context
name: Test and Coverage

on:
    # main 브렌치를 대상으로 하는 pull request가 create/update하면 실행된다
    pull_request:
        branches: ['main']
    # merge pull request하면 실행된다
    push:
        branches: ['main']

jobs:
    test-coverage:
        runs-on: ubuntu-24.04-arm
        container: node:24-bookworm
        env:
            WORKSPACE_ROOT: ${{ github.workspace }}
            PROJECT_NAME: ${{ github.event.repository.name }}
            TERM: xterm # This is required to enable use of the `clear` command in bash
        steps:
            - name: Checkout Code
              uses: actions/checkout@v4

            # .devcontainer/Dockerfile
            - name: Update Packages
              run: apt-get update

            - name: Install Tools
              run: apt-get install -y git curl jq tree vim

            - name: Install Docker
              run: |
                  apt-get update
                  apt-get install -y ca-certificates curl gnupg
                  install -m 0755 -d /etc/apt/keyrings
                  curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
                  chmod a+r /etc/apt/keyrings/docker.gpg
                  echo \
                    "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/debian \
                    $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
                    tee /etc/apt/sources.list.d/docker.list > /dev/null
                  apt-get update
                  apt-get install -y docker-ce-cli

            # devcontainer.json
            - name: initializeCommand
              run: |
                  docker network create ${PROJECT_NAME}
                  docker network connect ${PROJECT_NAME} ${{ job.container.id }}

            - name: postCreateCommand
              run: npm ci

            # Run All Tests
            - name: Run Prettier
              run: npx prettier 'src/**/*.ts'

            - name: Run Lint
              run: npx eslint src

            - name: Run Test Suites
              run: bash scripts/run-test.sh all 1

            - name: Run E2E Tests
              run: bash test/e2e/run.sh
